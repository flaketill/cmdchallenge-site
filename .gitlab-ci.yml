stages:
  - validate
  - plan
  - deploy

before_script:
  - git submodule update --init --recursive
  - docker info
  - terraform -version

validate:
  image: registry.gitlab.com/jarv/cmdchallenge/ci-image
  stage: validate
  # Validate every directory that contains terraform config
  # (`terraform validate` does not do a full recurse)
  script: |
    #!/bin/bash
    set -x
    tf_opts="-check-variables=false"
    cd terraform
    /usr/local/bin/terraform init -backend=false
    dirs_to_check=$(find . -name "*.tf" -type f -exec dirname {} \; | sort | uniq)
    /bin/sh -e -c 'for d in $0; do echo "Checking $d " && /usr/local/bin/terraform validate $1 "$d"; done' "$dirs_to_check" "$tf_opts"

plan:
  image: registry.gitlab.com/jarv/cmdchallenge/ci-image
  stage: plan
  script: |
    #!/bin/bash
    set -x
    ./bin/create-ssh-keys
    mkdir -p private/google
    echo $GCP_KEY | base64 -d > private/google/cmdchallenge.json
    cd terraform
    echo $(pwd)
    /usr/local/bin/terraform init
    /usr/local/bin/terraform workspace list
    /usr/local/bin/terraform workspace select prod
    /usr/local/bin/terraform plan -input=false

deploy:
  image: registry.gitlab.com/jarv/cmdchallenge/ci-image
  stage: deploy
  script: |
    #!/bin/bash
    set -x
    ./bin/create-ssh-keys
    mkdir -p private/google
    mkdir -p private/ssh
    mkdir -p private/ca
    mkdir -p private/client
    echo $GCP_KEY | base64 -d > private/google/cmdchallenge.json
    echo $CMD_RSA | base64 -d > private/ssh/cmd_rsa
    echo $CA_PEM | base64 -d > private/ca/ca.pem
    echo $CA_KEY_PEM | base64 -d > private/ca/ca-key.pem
    echo $CLIENT_CERT_PEM | base64 -d > private/client/cert.pem
    echo $CLIENT_KEY_PEM | base64 -d > private/client/key.pem
    cd terraform
    echo $(pwd)
    /usr/local/bin/terraform init
    /usr/local/bin/terraform workspace list
    /usr/local/bin/terraform workspace select prod
    /usr/local/bin/terraform taint null_resource.pre_archive
    /usr/local/bin/terraform apply -auto-approve -input=false  -var=timestamp=$(date '+%Y%m%d%s')
